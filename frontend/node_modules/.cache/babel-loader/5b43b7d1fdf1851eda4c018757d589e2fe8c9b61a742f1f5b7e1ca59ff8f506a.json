{"ast":null,"code":"import _slicedToArray from \"C:/School/3rd year/cinemadine/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  var _theme$colorSchemes = theme.colorSchemes,\n    colorSchemes = _theme$colorSchemes === void 0 ? {} : _theme$colorSchemes,\n    _theme$defaultColorSc = theme.defaultColorScheme,\n    defaultColorScheme = _theme$defaultColorSc === void 0 ? 'light' : _theme$defaultColorSc,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  var _cssVarsParser = cssVarsParser(otherTheme, parserConfig),\n    rootVars = _cssVarsParser.vars,\n    rootCss = _cssVarsParser.css,\n    rootVarsWithDefaults = _cssVarsParser.varsWithDefaults;\n  var themeVars = rootVarsWithDefaults;\n  var colorSchemesMap = {};\n  var light = colorSchemes[defaultColorScheme],\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      scheme = _ref2[1];\n    var _cssVarsParser2 = cssVarsParser(scheme, parserConfig),\n      vars = _cssVarsParser2.vars,\n      css = _cssVarsParser2.css,\n      varsWithDefaults = _cssVarsParser2.varsWithDefaults;\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css: css,\n      vars: vars\n    };\n  });\n  if (light) {\n    // default color scheme vars should be merged last to set as default\n    var _cssVarsParser3 = cssVarsParser(light, parserConfig),\n      css = _cssVarsParser3.css,\n      vars = _cssVarsParser3.vars,\n      varsWithDefaults = _cssVarsParser3.varsWithDefaults;\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css: css,\n      vars: vars\n    };\n  }\n  var generateCssVars = function generateCssVars(colorScheme) {\n    var _parserConfig$getSele2;\n    if (!colorScheme) {\n      var _parserConfig$getSele;\n      var _css = _extends({}, rootCss);\n      return {\n        css: _css,\n        vars: rootVars,\n        selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, _css)) || ':root'\n      };\n    }\n    var css = _extends({}, colorSchemesMap[colorScheme].css);\n    return {\n      css: css,\n      vars: colorSchemesMap[colorScheme].vars,\n      selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars: generateCssVars\n  };\n}\nexport default prepareCssVars;","map":{"version":3,"names":["_extends","_toPropertyKey","_objectWithoutPropertiesLoose","_excluded","deepmerge","cssVarsParser","prepareCssVars","theme","parserConfig","_theme$colorSchemes","colorSchemes","_theme$defaultColorSc","defaultColorScheme","otherTheme","_cssVarsParser","rootVars","vars","rootCss","css","rootVarsWithDefaults","varsWithDefaults","themeVars","colorSchemesMap","light","otherColorSchemes","map","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","scheme","_cssVarsParser2","_cssVarsParser3","generateCssVars","colorScheme","_parserConfig$getSele2","_parserConfig$getSele","selector","getSelector","call"],"sources":["C:/School/3rd year/cinemadine/frontend/node_modules/@mui/system/esm/cssVars/prepareCssVars.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"components\", \"defaultColorScheme\"];\nimport deepmerge from '@mui/utils/deepmerge';\nimport cssVarsParser from './cssVarsParser';\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {},\n      defaultColorScheme = 'light'\n    } = theme,\n    otherTheme = _objectWithoutPropertiesLoose(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = cssVarsParser(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      [defaultColorScheme]: light\n    } = colorSchemes,\n    otherColorSchemes = _objectWithoutPropertiesLoose(colorSchemes, [defaultColorScheme].map(_toPropertyKey));\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = cssVarsParser(scheme, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // default color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = cssVarsParser(light, parserConfig);\n    themeVars = deepmerge(themeVars, varsWithDefaults);\n    colorSchemesMap[defaultColorScheme] = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    var _parserConfig$getSele2;\n    if (!colorScheme) {\n      var _parserConfig$getSele;\n      const css = _extends({}, rootCss);\n      return {\n        css,\n        vars: rootVars,\n        selector: (parserConfig == null || (_parserConfig$getSele = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele.call(parserConfig, colorScheme, css)) || ':root'\n      };\n    }\n    const css = _extends({}, colorSchemesMap[colorScheme].css);\n    return {\n      css,\n      vars: colorSchemesMap[colorScheme].vars,\n      selector: (parserConfig == null || (_parserConfig$getSele2 = parserConfig.getSelector) == null ? void 0 : _parserConfig$getSele2.call(parserConfig, colorScheme, css)) || ':root'\n    };\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nexport default prepareCssVars;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}