{"ast":null,"code":"'use client';\n\n// do not remove the following import (https://github.com/microsoft/TypeScript/issues/29808#issuecomment-1320713018)\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// @ts-ignore\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nimport THEME_ID from './identifier';\nimport { defaultConfig } from '../InitColorSchemeScript/InitColorSchemeScript';\nvar defaultTheme = experimental_extendTheme();\nvar _createCssVarsProvide = createCssVarsProvider({\n    themeId: THEME_ID,\n    theme: defaultTheme,\n    attribute: defaultConfig.attribute,\n    colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n    modeStorageKey: defaultConfig.modeStorageKey,\n    defaultColorScheme: {\n      light: defaultConfig.defaultLightColorScheme,\n      dark: defaultConfig.defaultDarkColorScheme\n    },\n    resolveTheme: function resolveTheme(theme) {\n      var newTheme = _extends({}, theme, {\n        typography: createTypography(theme.palette, theme.typography)\n      });\n      newTheme.unstable_sx = function sx(props) {\n        return styleFunctionSx({\n          sx: props,\n          theme: this\n        });\n      };\n      return newTheme;\n    },\n    excludeVariablesFromRoot: excludeVariablesFromRoot\n  }),\n  CssVarsProvider = _createCssVarsProvide.CssVarsProvider,\n  useColorScheme = _createCssVarsProvide.useColorScheme,\n  getInitColorSchemeScriptSystem = _createCssVarsProvide.getInitColorSchemeScript;\n\n/**\n * @deprecated Use `InitColorSchemeScript` instead\n * ```diff\n * - import { getInitColorSchemeScript } from '@mui/material/styles';\n * + import InitColorSchemeScript from '@mui/material/InitColorSchemeScript';\n *\n * - getInitColorSchemeScript();\n * + <InitColorSchemeScript />;\n * ```\n */\nexport var getInitColorSchemeScript = getInitColorSchemeScriptSystem;\nexport { useColorScheme, CssVarsProvider as Experimental_CssVarsProvider };","map":{"version":3,"names":["_extends","unstable_createCssVarsProvider","createCssVarsProvider","styleFunctionSx","experimental_extendTheme","createTypography","excludeVariablesFromRoot","THEME_ID","defaultConfig","defaultTheme","_createCssVarsProvide","themeId","theme","attribute","colorSchemeStorageKey","modeStorageKey","defaultColorScheme","light","defaultLightColorScheme","dark","defaultDarkColorScheme","resolveTheme","newTheme","typography","palette","unstable_sx","sx","props","CssVarsProvider","useColorScheme","getInitColorSchemeScriptSystem","getInitColorSchemeScript","Experimental_CssVarsProvider"],"sources":["C:/School/3rd year/cinemadine/frontend/node_modules/@mui/material/styles/CssVarsProvider.js"],"sourcesContent":["'use client';\n\n// do not remove the following import (https://github.com/microsoft/TypeScript/issues/29808#issuecomment-1320713018)\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// @ts-ignore\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nimport THEME_ID from './identifier';\nimport { defaultConfig } from '../InitColorSchemeScript/InitColorSchemeScript';\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: getInitColorSchemeScriptSystem\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  theme: defaultTheme,\n  attribute: defaultConfig.attribute,\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  },\n  excludeVariablesFromRoot\n});\n\n/**\n * @deprecated Use `InitColorSchemeScript` instead\n * ```diff\n * - import { getInitColorSchemeScript } from '@mui/material/styles';\n * + import InitColorSchemeScript from '@mui/material/InitColorSchemeScript';\n *\n * - getInitColorSchemeScript();\n * + <InitColorSchemeScript />;\n * ```\n */\nexport const getInitColorSchemeScript = getInitColorSchemeScriptSystem;\nexport { useColorScheme, CssVarsProvider as Experimental_CssVarsProvider };"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,8BAA8B,IAAIC,qBAAqB,QAAQ,aAAa;AACrF,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,QAAQ,MAAM,cAAc;AACnC,SAASC,aAAa,QAAQ,gDAAgD;AAC9E,IAAMC,YAAY,GAAGL,wBAAwB,CAAC,CAAC;AAC/C,IAAAM,qBAAA,GAIIR,qBAAqB,CAAC;IACxBS,OAAO,EAAEJ,QAAQ;IACjBK,KAAK,EAAEH,YAAY;IACnBI,SAAS,EAAEL,aAAa,CAACK,SAAS;IAClCC,qBAAqB,EAAEN,aAAa,CAACM,qBAAqB;IAC1DC,cAAc,EAAEP,aAAa,CAACO,cAAc;IAC5CC,kBAAkB,EAAE;MAClBC,KAAK,EAAET,aAAa,CAACU,uBAAuB;MAC5CC,IAAI,EAAEX,aAAa,CAACY;IACtB,CAAC;IACDC,YAAY,EAAE,SAAAA,aAAAT,KAAK,EAAI;MACrB,IAAMU,QAAQ,GAAGtB,QAAQ,CAAC,CAAC,CAAC,EAAEY,KAAK,EAAE;QACnCW,UAAU,EAAElB,gBAAgB,CAACO,KAAK,CAACY,OAAO,EAAEZ,KAAK,CAACW,UAAU;MAC9D,CAAC,CAAC;MACFD,QAAQ,CAACG,WAAW,GAAG,SAASC,EAAEA,CAACC,KAAK,EAAE;QACxC,OAAOxB,eAAe,CAAC;UACrBuB,EAAE,EAAEC,KAAK;UACTf,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC;MACD,OAAOU,QAAQ;IACjB,CAAC;IACDhB,wBAAwB,EAAxBA;EACF,CAAC,CAAC;EA1BAsB,eAAe,GAAAlB,qBAAA,CAAfkB,eAAe;EACfC,cAAc,GAAAnB,qBAAA,CAAdmB,cAAc;EACYC,8BAA8B,GAAApB,qBAAA,CAAxDqB,wBAAwB;;AA0B1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,wBAAwB,GAAGD,8BAA8B;AACtE,SAASD,cAAc,EAAED,eAAe,IAAII,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}